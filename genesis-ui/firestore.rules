service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    
    match /notifications/{note}{
      allow read;
      allow write: if request.auth.uid == request.resource.data.creationUserId && request.auth.token.genesisAll == true;
      allow delete: if request.auth.token.genesisAll == true;
    }

    // Allow users to read their own metadata
    match /taxonomyUser/{userId}{
      allow list: if get(/databases/$(database)/documents/taxonomyUser/$(request.auth.uid)).data.superAdmin == true;
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/taxonomyUser/$(request.auth.uid)).data.superAdmin == true;
      allow write: if get(/databases/$(database)/documents/taxonomyUser/$(request.auth.uid)).data.superAdmin == true;
    }
    
    // Allow super users and admins of their own clients to read and write
    match /taxonomyGroupClaims/{clientid}{
      allow read, write: if get(/databases/$(database)/documents/taxonomyUser/$(request.auth.uid)).data.superAdmin == true || resource.data.admins[request.auth.uid] != null;
    }

    // Allow users to read and write templates to clients they have access too
    match /taxonomyTemplate/{templateid}{
      function isAdmin(uid, groupId) {
        return uid != null && (get(/databases/$(database)/documents/taxonomyGroupClaims/$(groupId)).data.admins[uid] != null);
      }  
      function hasAccess() {
        return get(/databases/$(database)/documents/taxonomyGroupClaims/$(request.resource.data.claim.groupId)).data.users[request.auth.uid] != null;
      }
      function hasResourceAccess() {
        return get(/databases/$(database)/documents/taxonomyGroupClaims/$(resource.data.claim.groupId)).data.users[request.auth.uid] != null;
      }

    	allow read: if hasResourceAccess();
      allow delete: if hasResourceAccess() && (isAdmin(request.auth.uid, resource.data.claim.groupId) || resource.data.parent == false);
      allow write: if hasAccess() && (isAdmin(request.auth.uid, request.resource.data.claim.groupId) || request.resource.data.parent == false);
    }

    // Allow users to read their own metadata and super admins to create users
    match /UserList/{id}{
      allow read;
      allow write: if get(/databases/$(database)/documents/taxonomyUser/$(request.auth.uid)).data.superAdmin == true
    }

    // Allow users to write archived taxonomy
    match /generatedTaxonomy/{glossaryId}{
      allow write;
    }

    match /taxonomyGlossary/{glossaryId}{
      allow read: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(resource.data.claim.groupId)).data.users[request.auth.uid] != null;
      allow delete: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(resource.data.claim.groupId)).data.admins[request.auth.uid] != null;
      allow write: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(request.resource.data.claim.groupId)).data.admins[request.auth.uid] != null;
    }
    
    match /taxonomyGlossary/{glossaryId}/categories/{categoryId} {

      function getGroupId() {
        return get(/databases/$(database)/documents/taxonomyGlossary/$(glossaryId)).data.claim.groupId;
      }

      function taxonomyGroupClaims(groupId) {
        return get(/databases/$(database)/documents/taxonomyGroupClaims/$(groupId));
      }

      allow read: if taxonomyGroupClaims(getGroupId()).data.users[request.auth.uid] != null;
      allow write: if taxonomyGroupClaims(getGroupId()).data.admins[request.auth.uid] != null;
    }

    match /jumpIDGlossary/{glossaryId}{
      allow read: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(resource.data.claim.groupId)).data.users[request.auth.uid] != null;
      allow delete: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(resource.data.claim.groupId)).data.admins[request.auth.uid] != null;
      allow write: if get(/databases/$(database)/documents/taxonomyGroupClaims/$(request.resource.data.claim.groupId)).data.admins[request.auth.uid] != null;
    }
    
    match /jumpIDGlossary/{glossaryId}/categories/{categoryId} {

      function getGroupId() {
        return get(/databases/$(database)/documents/jumpIDGlossary/$(glossaryId)).data.claim.groupId;
      }

      function taxonomyGroupClaims(groupId) {
        return get(/databases/$(database)/documents/taxonomyGroupClaims/$(groupId));
      }

      allow read: if taxonomyGroupClaims(getGroupId()).data.users[request.auth.uid] != null;
      allow write: if taxonomyGroupClaims(getGroupId()).data.admins[request.auth.uid] != null;
    }
  }
}
